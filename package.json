{
  "name": "ai-debugger-mentor",
  "displayName": "AI Debugger Mentor",
  "description": "Proactive AI pair programming mentor that watches your code and provides real-time guidance",
  "version": "0.0.1",
  "engines": {
    "vscode": "^1.74.0"
  },
  "categories": [
    "Debuggers",
    "Machine Learning",
    "Education"
  ],
  "activationEvents": [
    "onLanguage:javascript",
    "onLanguage:typescript",
    "onLanguage:python",
    "onLanguage:java",
    "onLanguage:cpp"
  ],
  "main": "./out/extension.js",
  "contributes": {
    "commands": [
      {
        "command": "aiMentor.activate",
        "title": "Activate AI Mentor",
        "category": "AI Mentor"
      },
      {
        "command": "aiMentor.deactivate",
        "title": "Deactivate AI Mentor",
        "category": "AI Mentor"
      },
      {
        "command": "aiMentor.startDebugging",
        "title": "Start Guided Debugging",
        "category": "AI Mentor"
      },
      {
        "command": "aiMentor.traceExecution",
        "title": "Trace Code Execution",
        "category": "AI Mentor"
      },
      {
        "command": "aiMentor.selectProfile",
        "title": "üë§ Select Mentor Profile",
        "category": "AI Mentor Profiles"
      },
      {
        "command": "aiMentor.createProfile",
        "title": "‚ûï Create New Profile",
        "category": "AI Mentor Profiles"
      },
      {
        "command": "aiMentor.selectMentor",
        "title": "üé≠ Select Mentor Personality",
        "category": "AI Mentor Profiles"
      },
      {
        "command": "aiMentor.manageProfiles",
        "title": "‚öôÔ∏è Manage Profiles",
        "category": "AI Mentor Profiles"
      },
      {
        "command": "aiMentor.speakToMentor",
        "title": "üé§ Speak to your mentor",
        "category": "AI Mentor"
      },
      {
        "command": "aiMentor.configureVAPI",
        "title": "‚öôÔ∏è Configure VAPI Settings",
        "category": "AI Mentor"
      }
    ],
    "views": {
      "aiMentor": [
        {
          "id": "aiMentorPanel",
          "name": "AI Mentor",
          "type": "webview"
        }
      ]
    },
    "viewsContainers": {
      "activitybar": [
        {
          "id": "aiMentor",
          "title": "AI Mentor",
          "icon": "$(robot)"
        }
      ]
    },
    "configuration": {
      "title": "AI Mentor",
      "properties": {
        "aiMentor.llmProvider": {
          "type": "string",
          "default": "gemini",
          "enum": [
            "gemini",
            "openai",
            "anthropic"
          ],
          "description": "LLM provider to use for AI mentor"
        },
        "aiMentor.apiKey": {
          "type": "string",
          "description": "API key for the selected LLM provider"
        },
        "aiMentor.vapiApiKey": {
          "type": "string",
          "description": "VAPI API key for voice AI features"
        },
        "aiMentor.enableVoiceNarration": {
          "type": "boolean",
          "default": false,
          "description": "Enable voice narration of code flow"
        },
        "aiMentor.multiModalMode": {
          "type": "boolean",
          "default": false,
          "description": "Enable multi-modal agent with voice and visual analysis"
        },
        "aiMentor.conversationalDebugging": {
          "type": "boolean",
          "default": false,
          "description": "Enable conversational debugging with voice commands"
        },
        "aiMentor.proactiveMode": {
          "type": "boolean",
          "default": true,
          "description": "Enable proactive suggestions and warnings"
        },
        "aiMentor.engineeringAnalysis": {
          "type": "boolean",
          "default": true,
          "description": "Enable Graphite-inspired engineering practices analysis"
        },
        "aiMentor.voiceProvider": {
          "type": "string",
          "default": "vapi",
          "enum": [
            "vapi",
            "browser"
          ],
          "description": "Voice provider to use (VAPI for advanced features, browser for basic)"
        },
        "aiMentor.activeProfile": {
          "type": "string",
          "default": "marcus",
          "description": "Currently active mentor profile ID"
        },
        "aiMentor.vapiPublicKey": {
          "type": "string",
          "default": "365fc87d-f1cb-46a1-9e20-be85b18aab41",
          "description": "VAPI public key for voice functionality"
        },
        "aiMentor.vapiAssistantId": {
          "type": "string",
          "default": "8026e50f-8bd8-42e6-9f95-6176698aa424",
          "description": "VAPI assistant ID for voice conversations"
        }
      }
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./"
  },
  "devDependencies": {
    "@types/node": "16.x",
    "@types/vscode": "^1.74.0",
    "@types/ws": "^8.5.0",
    "typescript": "^4.9.4"
  },
  "dependencies": {
    "@babel/parser": "^7.23.0",
    "@babel/traverse": "^7.23.0",
    "@babel/types": "^7.23.0",
    "@google/generative-ai": "^0.2.1",
    "@vapi-ai/web": "^1.0.0",
    "diff": "^5.1.0",
    "node-fetch": "^3.3.2",
    "openai": "^5.20.2",
    "ws": "^8.14.0"
  }
}
